{"ast":null,"code":"var _jsxFileName = \"/Users/kevinhan/Documents/Projects/f1-comparison-app/frontend/src/RaceDropdown.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RaceDropdown = ({\n  dropdownOptions,\n  onSelect\n}) => {\n  _s();\n  const [dropdownToggled, setDropdownToggled] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    function handler(e) {\n      if (dropdownRef.current) {\n        if (!dropdownRef.current.contains(e.target)) {\n          setDropdownToggled(false);\n        }\n      }\n    }\n    document.addEventListener('click', handler);\n    return () => {\n      document.removeEventListener('click', handler);\n    };\n  });\n\n  // const dropdownOptions = [\n  //     {\n  //         id: 0,\n  //         label: \"Select Race\",\n  //         value: \"\",\n  //     },\n  //     {\n  //         id: 1,\n  //         label: \"Bahrain Grand Prix\",\n  //         value: \"Bahrain Grand Prix\",\n  //     },\n  //     {\n  //         id: 2,\n  //         label: \"Saudi Arabian Grand Prix\",\n  //         value: \"Saudi Arabian Grand Prix\",\n  //     },\n  //     {\n  //         id: 3,\n  //         label: \"Australian Grand Prix\",\n  //         value: \"Australian Grand Prix\",\n  //     },\n  //     {\n  //         id: 4,\n  //         label: \"Emilia Romagna Grand Prix\",\n  //         value: \"Emilia Romagna Grand Prix\",\n  //     },\n  //     {\n  //         id: 5,\n  //         label: \"Miami Grand Prix\",\n  //         value: \"Miami Grand Prix\",\n  //     },\n  //     {\n  //         id: 6,\n  //         label: \"Spanish Grand Prix\",\n  //         value: \"Spanish Grand Prix\",\n  //     },\n  //     {\n  //         id: 7,\n  //         label: \"Monaco Grand Prix\",\n  //         value: \"Monaco Grand Prix\",\n  //     },\n  //     {\n  //         id: 8,\n  //         label: \"Azerbaijan Grand Prix\",\n  //         value: \"Azerbaijan Grand Prix\",\n  //     },\n  //     {\n  //         id: 9,\n  //         label: \"Canadian Grand Prix\",\n  //         value: \"Canadian Grand Prix\",\n  //     },\n  //     {\n  //         id: 10,\n  //         label: \"British Grand Prix\",\n  //         value: \"British Grand Prix\",\n  //     },\n  //     {\n  //         id: 11,\n  //         label: \"Austrian Grand Prix\",\n  //         value: \"Austrian Grand Prix\",\n  //     },\n  //     {\n  //         id: 12,\n  //         label: \"French Grand Prix\",\n  //         value: \"French Grand Prix\",\n  //     },\n  //     {\n  //         id: 13,\n  //         label: \"Hungarian Grand Prix\",\n  //         value: \"Hungarian Grand Prix\",\n  //     },\n  //     {\n  //         id: 14,\n  //         label: \"Belgian Grand Prix\",\n  //         value: \"Belgian Grand Prix\",\n  //     },\n  //     {\n  //         id: 15,\n  //         label: \"Dutch Grand Prix\",\n  //         value: \"Dutch Grand Prix\",\n  //     },\n  //     {\n  //         id: 16,\n  //         label: \"Italian Grand Prix\",\n  //         value: \"Italian Grand Prix\",\n  //     },\n  //     {\n  //         id: 17,\n  //         label: \"Singapore Grand Prix\",\n  //         value: \"Singapore Grand Prix\",\n  //     },\n  //     {\n  //         id: 18,\n  //         label: \"Japanese Grand Prix\",\n  //         value: \"Japanese Grand Prix\",\n  //     },\n  //     {\n  //         id: 19,\n  //         label: \"United States Grand Prix\",\n  //         value: \"United States Grand Prix\",\n  //     },\n  //     {\n  //         id: 20,\n  //         label: \"Mexico City Grand Prix\",\n  //         value: \"Mexico City Grand Prix\",\n  //     },\n  //     {\n  //         id: 21,\n  //         label: \"Sao Paulo Grand Prix\",\n  //         value: \"Sao Paulo Grand Prix\",\n  //     },\n  //     {\n  //         id: 22,\n  //         label: \"Abu Dhabi Grand Prix\",\n  //         value: \"Abu Dhabi Grand Prix\",\n  //     }\n  // ]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggleDropdown\",\n      onClick: () => {\n        setDropdownToggled(!dropdownToggled);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedOption ? selectedOption.label : \"Select Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dropdownToggled ? '∧' : '∨'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `optionsDropdown ${dropdownToggled ? 'visible' : ''}`,\n      children: dropdownOptions.map((o, i) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${selectedOption.id === o.id ? 'selected' : ''}`,\n          onClick: () => {\n            setSelectedOption(o);\n            onSelect(o.value);\n            setDropdownToggled(false);\n          },\n          children: o.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(RaceDropdown, \"+/9LjeIqpmUDaabeeVFDgk9Zz6M=\");\n_c = RaceDropdown;\nexport default RaceDropdown;\nvar _c;\n$RefreshReg$(_c, \"RaceDropdown\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","RaceDropdown","dropdownOptions","onSelect","_s","dropdownToggled","setDropdownToggled","selectedOption","setSelectedOption","dropdownRef","handler","e","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","onClick","label","fileName","_jsxFileName","lineNumber","columnNumber","map","o","i","id","value","_c","$RefreshReg$"],"sources":["/Users/kevinhan/Documents/Projects/f1-comparison-app/frontend/src/RaceDropdown.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst RaceDropdown = ({ dropdownOptions, onSelect }) => {\n    const [dropdownToggled, setDropdownToggled] = useState(false);\n    const [selectedOption, setSelectedOption] = useState('');\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        function handler(e) {\n            if (dropdownRef.current) {\n                if (!dropdownRef.current.contains(e.target)) {\n                    setDropdownToggled(false);\n                }\n            }\n        }\n\n        document.addEventListener('click', handler);\n\n        return () => {\n            document.removeEventListener('click', handler);\n        }\n    })\n\n    // const dropdownOptions = [\n    //     {\n    //         id: 0,\n    //         label: \"Select Race\",\n    //         value: \"\",\n    //     },\n    //     {\n    //         id: 1,\n    //         label: \"Bahrain Grand Prix\",\n    //         value: \"Bahrain Grand Prix\",\n    //     },\n    //     {\n    //         id: 2,\n    //         label: \"Saudi Arabian Grand Prix\",\n    //         value: \"Saudi Arabian Grand Prix\",\n    //     },\n    //     {\n    //         id: 3,\n    //         label: \"Australian Grand Prix\",\n    //         value: \"Australian Grand Prix\",\n    //     },\n    //     {\n    //         id: 4,\n    //         label: \"Emilia Romagna Grand Prix\",\n    //         value: \"Emilia Romagna Grand Prix\",\n    //     },\n    //     {\n    //         id: 5,\n    //         label: \"Miami Grand Prix\",\n    //         value: \"Miami Grand Prix\",\n    //     },\n    //     {\n    //         id: 6,\n    //         label: \"Spanish Grand Prix\",\n    //         value: \"Spanish Grand Prix\",\n    //     },\n    //     {\n    //         id: 7,\n    //         label: \"Monaco Grand Prix\",\n    //         value: \"Monaco Grand Prix\",\n    //     },\n    //     {\n    //         id: 8,\n    //         label: \"Azerbaijan Grand Prix\",\n    //         value: \"Azerbaijan Grand Prix\",\n    //     },\n    //     {\n    //         id: 9,\n    //         label: \"Canadian Grand Prix\",\n    //         value: \"Canadian Grand Prix\",\n    //     },\n    //     {\n    //         id: 10,\n    //         label: \"British Grand Prix\",\n    //         value: \"British Grand Prix\",\n    //     },\n    //     {\n    //         id: 11,\n    //         label: \"Austrian Grand Prix\",\n    //         value: \"Austrian Grand Prix\",\n    //     },\n    //     {\n    //         id: 12,\n    //         label: \"French Grand Prix\",\n    //         value: \"French Grand Prix\",\n    //     },\n    //     {\n    //         id: 13,\n    //         label: \"Hungarian Grand Prix\",\n    //         value: \"Hungarian Grand Prix\",\n    //     },\n    //     {\n    //         id: 14,\n    //         label: \"Belgian Grand Prix\",\n    //         value: \"Belgian Grand Prix\",\n    //     },\n    //     {\n    //         id: 15,\n    //         label: \"Dutch Grand Prix\",\n    //         value: \"Dutch Grand Prix\",\n    //     },\n    //     {\n    //         id: 16,\n    //         label: \"Italian Grand Prix\",\n    //         value: \"Italian Grand Prix\",\n    //     },\n    //     {\n    //         id: 17,\n    //         label: \"Singapore Grand Prix\",\n    //         value: \"Singapore Grand Prix\",\n    //     },\n    //     {\n    //         id: 18,\n    //         label: \"Japanese Grand Prix\",\n    //         value: \"Japanese Grand Prix\",\n    //     },\n    //     {\n    //         id: 19,\n    //         label: \"United States Grand Prix\",\n    //         value: \"United States Grand Prix\",\n    //     },\n    //     {\n    //         id: 20,\n    //         label: \"Mexico City Grand Prix\",\n    //         value: \"Mexico City Grand Prix\",\n    //     },\n    //     {\n    //         id: 21,\n    //         label: \"Sao Paulo Grand Prix\",\n    //         value: \"Sao Paulo Grand Prix\",\n    //     },\n    //     {\n    //         id: 22,\n    //         label: \"Abu Dhabi Grand Prix\",\n    //         value: \"Abu Dhabi Grand Prix\",\n    //     }\n    // ]\n\n    return (\n        <div className='dropdown' ref={dropdownRef}>\n            <button className='toggleDropdown' onClick={() => {\n                setDropdownToggled(!dropdownToggled);\n            }}>\n                <span>{selectedOption ? selectedOption.label : \"Select Race\"}</span>\n                <span>{dropdownToggled ? '∧' : '∨'}</span>\n            </button>\n            <div className={`optionsDropdown ${dropdownToggled ? 'visible' : ''}`}>\n                {dropdownOptions.map((o, i) => {\n                    return (\n                        <button className={`${selectedOption.id === o.id ? 'selected' : ''}`} onClick={() => {\n                            setSelectedOption(o);\n                            onSelect(o.value);\n                            setDropdownToggled(false);\n                        }}>{o.label}</button>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default RaceDropdown;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMa,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ,SAASa,OAAOA,CAACC,CAAC,EAAE;MAChB,IAAIF,WAAW,CAACG,OAAO,EAAE;QACrB,IAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;UACzCR,kBAAkB,CAAC,KAAK,CAAC;QAC7B;MACJ;IACJ;IAEAS,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,OAAO,CAAC;IAE3C,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,OAAO,CAAC;IACloBACIV,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAACC,GAAG,EAAEV,WAAY;IAAAW,QAAA,gBACvCpB,OAAA;MAAQkB,SAAS,EAAC,gBAAgB;MAACG,OAAO,EAAEA,CAAA,KAAM;QAC9Cf,kBAAkB,CAAC,CAACD,eAAe,CAAC;MACxC,CAAE;MAAAe,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAOb,cAAc,GAAGA,cAAc,CAACe,KAAK,GAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpE1B,OAAA;QAAAoB,QAAA,EAAOf,eAAe,GAAG,GAAG,GAAG;MAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACT1B,OAAA;MAAKkB,SAAS,EAAE,mBAAmBb,eAAe,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAe,QAAA,EACjElB,eAAe,CAACyB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3B,oBACI7B,OAAA;UAAQkB,SAAS,EAAE,GAAGX,cAAc,CAACuB,EAAE,KAAKF,CAAC,CAACE,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;UAACT,OAAO,EAAEA,CAAA,KAAM;YACjFb,iBAAiB,CAACoB,CAAC,CAAC;YACpBzB,QAAQ,CAACyB,CAAC,CAACG,KAAK,CAAC;YACjBzB,kBAAkB,CAAC,KAAK,CAAC;UAC7B,CAAE;UAAAc,QAAA,EAAEQ,CAAC,CAACN;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAE7B,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAhKKH,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAkKlB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}